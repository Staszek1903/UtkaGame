[gd_scene load_steps=6 format=2]

[ext_resource path="res://src/Flag.gd" type="Script" id=1]

[sub_resource type="Shader" id=1]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.2.stable's SpatialMaterial.

shader_type spatial;
render_mode async_visible,blend_mix,depth_draw_opaque,cull_disabled,diffuse_burley,specular_schlick_ggx,ensure_correct_normals;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform sampler2D wind_noise;
uniform float flop_time_scale = 10.0;
uniform float flop_scale = 10.0;
uniform float flop_amplitude = 0.25;


void vertex() {
	vec2 base_uv = UV*uv1_scale.xy+uv1_offset.xy;
	float offset = texture(wind_noise, base_uv * flop_scale + vec2(TIME * flop_time_scale, 0.0)).x;
	float offset2 = texture(wind_noise, base_uv * flop_scale + vec2(TIME * flop_time_scale, 0.0) + vec2(0.1,0)).x;
	offset = (offset - 0.5)  * flop_amplitude * base_uv.x;
	offset2 = (offset2 - 0.5) * flop_amplitude * base_uv.x;
	VERTEX += NORMAL * offset;
	VERTEX.y += offset2;
	
	//NORMAL = normalize(cross(dFdx(VERTEX), dFdy(VERTEX)));
}




void fragment() {
	vec2 base_uv = UV*uv1_scale.xy+uv1_offset.xy;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	float offset = texture(wind_noise, base_uv * flop_scale + vec2(TIME * flop_time_scale, 0.0)).x;
	ALBEDO = albedo.rgb * albedo_tex.rgb * offset;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"

[sub_resource type="OpenSimplexNoise" id=3]

[sub_resource type="NoiseTexture" id=4]
seamless = true
noise = SubResource( 3 )

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/albedo = Color( 1, 0, 0, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/flop_time_scale = -0.684
shader_param/flop_scale = 0.196
shader_param/flop_amplitude = 0.454
shader_param/wind_noise = SubResource( 4 )

[node name="Flag" type="ImmediateGeometry"]
material_override = SubResource( 2 )
script = ExtResource( 1 )
segment_size = 0.176
begin_width = 0.356
end_width = 0.061
gravity = 0.2
dir = -1.477
